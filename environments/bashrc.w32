#!/bin/sh

# Source the normal system-wide and user environment.
if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
fi
if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

# Some value for user usage.
export HOST=i686-w64-mingw32
export BUILD=`@DATADIR@/share/crossroad/scripts/config.guess`
export PLATFORM=w32
export PLATFORM_NICENAME="Windows 32-bit"
export CROSSROAD_CMAKE_TOOLCHAIN_FILE="@DATADIR@/share/crossroad/environments/toolchain-w32.cmake"

# ld is a mandatory file to enter this environment.
# Also it is normally not touched by ccache, which makes it a better
# prefix-searching tool than gcc.
host_ld="`which $HOST-ld`"
host_ld_dir="`dirname $host_ld`"
host_ld_bin="`basename $host_ld_dir`"

if [ $host_ld_bin = "bin" ]; then
    host_ld_prefix="`dirname $host_ld_dir`"
    # No need to add the guessed prefix if it is a common one that we add anyway.
    if [ "$host_ld_prefix" != "/usr" ]; then
        if [ "$host_ld_prefix" != "/usr/local" ]; then
            if [ -d "$host_ld_prefix/$HOST" ]; then
                export CROSSROAD_GUESSED_MINGW_PREFIX="$host_ld_prefix/$HOST"
            fi
        fi
    fi
    unset host_ld_prefix
fi
unset host_ld_bin
unset host_ld_dir
unset host_ld

# Internal usage.
export CROSSROAD_ROAD=w32

# Here is our root.
export PREFIX="`crossroad -p`"

# Reset pkg-config to search *ONLY* libraries compiled for the cross-compiled platform target.
export PKG_CONFIG_LIBDIR=
export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig:$PREFIX/share/pkgconfig
if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX" ]; then
    export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib32/pkconfig:$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib/pkconfig"
fi
if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX" ]; then
    export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$CROSSROAD_GUESSED_MINGW_PREFIX/lib32/pkconfig:$CROSSROAD_GUESSED_MINGW_PREFIX/lib/pkconfig"
fi
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/$HOST/lib/pkconfig
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/$HOST/lib/pkconfig

export LD_LIBRARY_PATH=$PREFIX/lib
if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX" ]; then
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib32/:$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib/"
fi
if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX" ]; then
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:$CROSSROAD_GUESSED_MINGW_PREFIX/lib32/:$CROSSROAD_GUESSED_MINGW_PREFIX/lib/"
fi
# Adding some typical distribution paths.
# Note: I could also try to guess the user path from `which ${HOST}-gcc`.
# But it may not always work. For instance if the user uses ccache.
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/$HOST/lib/
export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/$HOST/lib/

mkdir -p $PREFIX/bin
export PATH=$PREFIX/bin:$PATH

# no such file or directory error on non-existing aclocal.
mkdir -p $PREFIX/share/aclocal
export ACLOCAL_FLAGS="-I $PREFIX/share/aclocal"
# no such file or directory warning on non-existing include.
mkdir -p $PREFIX/include
export CFLAGS="-I$PREFIX/include"
mkdir -p $PREFIX/lib
export LDFLAGS="-L$PREFIX/lib"

# Very important! The default -I list of directories when none is specified!
export CPATH="$PREFIX/include"

if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX" ]; then
    if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/include" ]; then
        export CFLAGS="$CFLAGS -I$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/include/"
        export CPATH="$CPATH:$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/include/"
    fi
    if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib32" ]; then
        export LDFLAGS="$LDFLAGS -L$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib32"
    fi
    if [ -d "$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib" ]; then
        export LDFLAGS="$LDFLAGS -L$CROSSROAD_CUSTOM_MINGW_W32_PREFIX/lib"
    fi
fi
if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX" ]; then
    if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX/include" ]; then
        export CFLAGS="$CFLAGS -I$CROSSROAD_GUESSED_MINGW_PREFIX/include/"
        export CPATH="$CPATH:$CROSSROAD_GUESSED_MINGW_PREFIX/include/"
    fi
    if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX/lib32" ]; then
        export LDFLAGS="$LDFLAGS -L$CROSSROAD_GUESSED_MINGW_PREFIX/lib32"
    fi
    if [ -d "$CROSSROAD_GUESSED_MINGW_PREFIX/lib" ]; then
        export LDFLAGS="$LDFLAGS -L$CROSSROAD_GUESSED_MINGW_PREFIX/lib"
    fi
fi
# Adding some user-installed or distribution common installation path.
if [ -d "/usr/local/$HOST/include" ]; then
    export CFLAGS="$CFLAGS -I/usr/local/$HOST/include/"
    export CPATH="$CPATH:/usr/local/$HOST/include/"
fi
if [ -d "/usr/$HOST/include" ]; then
    export CFLAGS="$CFLAGS -I/usr/$HOST/include/"
    export CPATH="$CPATH:/usr/$HOST/include/"
fi
if [ -d "/usr/local/$HOST/lib" ]; then
    export LDFLAGS="$LDFLAGS -L/usr/local/$HOST/lib"
fi
if [ -d "/usr/$HOST/lib" ]; then
    export LDFLAGS="$LDFLAGS -L/usr/$HOST/lib"
fi

# So that the system-wide python can still find any locale lib.
for dir in $PREFIX/lib/python*
do
    export PYTHONPATH=:${dir}:$PYTHONPATH
done;

# http://gcc.gnu.org/onlinedocs/cpp/Environment-Variables.html
# http://wiki.gimp.org/index.php/Hacking:Building/Windows

# CHANGE the shell to show you are in cross-comp env.
RED="\[\033[0;31m\]"
NORMAL="\[\033[00m\]"
if [ x"$(locale charmap)"x == "xUTF-8x" ]; then
    SYMBOL="âœ˜"
else
    SYMBOL="*"
fi;

# Leave the user override the default crossroads PS1.
if [ x"${CROSSROADS_PS1}"x == "xx" ]; then
    export PS1="${RED}${PLATFORM}${SYMBOL}${NORMAL} ${PS1}"
else
    export PS1="${CROSSROADS_PS1}"
fi

echo "Your environment has been set to cross-compile for the '$PLATFORM_NICENAME' ($PLATFORM) environment."
echo "You have been automatically transported to the prefered cross-compilation prefix (${PREFIX})."
echo "Use the \$PREFIX environment variable in your compilation scripts (for instance \`./configure --prefix=\$PREFIX\` for GNU-style projects)."
echo "To exit this cross-compilation environment, simply \`exit\` the current shell session."
